/*
 * 
 */
package org.vaadin.addons.excelexporter;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.karneim.pojobuilder.GeneratePojoBuilder;

import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;

/**
 * The Class ExportExcelSheetConfiguration is used to configure each sheet. Several things such as report title, sheet name, component configs etc. can also be
 * configured
 *
 * @author Kartik Suba
 */
@GeneratePojoBuilder(
        intoPackage = "*.builder")
public class ExportExcelSheetConfiguration {

    /** The is total row required. */
    private Boolean isTotalRowRequired = Boolean.FALSE;

    /** The is default sheet title required. */
    private Boolean isDefaultSheetTitleRequired = Boolean.TRUE;

    /** The is default generated by required. */
    private Boolean isDefaultGeneratedByRequired = Boolean.TRUE;

    /** The is header section added. */
    private Boolean isHeaderSectionAdded = false;

    /** The default report title. */
    final String DEFAULT_REPORT_TITLE = "Report";

    /** The default sheet row num. */
    Integer defaultSheetRowNum = 0;

    /** The date format. */
    String dateFormat = "EEE, dd.MM.yyyy";

    /** The report title row content. */
    String reportTitleRowContent;

    /** The header caption start col. */
    Integer headerCaptionStartCol = 0; // default Value

    /** The header value start col. */
    Integer headerValueStartCol = 1; // default Value

    /** The no of columns in header. */
    Integer noOfColumnsInHeader = 2; // default Value

    /** The no of columns to merge in add header value. */
    Integer noOfColumnsToMergeInAddHeaderValue = 2; // default Value

    /** The no of columns in add header. */
    Integer noOfColumnsInAddHeader = 2 * this.noOfColumnsToMergeInAddHeaderValue; // default

    /** The is header section required. */
    Boolean isHeaderSectionRequired = Boolean.FALSE;

    /** The logger info row content. */
    String loggerInfoRowContent;

    /** The report title. */
    String reportTitle;

    /** The column for title region. */
    Integer[] columnForTitleRegion = new Integer[2];

    /** The column for generated by region. */
    Integer[] columnForGeneratedByRegion = new Integer[2];

    /** The component configs. */
    List<ExportExcelComponentConfiguration> componentConfigs = new ArrayList<ExportExcelComponentConfiguration>();

    /** The additional header info. */
    Map<String, String> additionalHeaderInfo = new HashMap<String, String>();

    /** The sheet name. */
    String sheetName;

    /** The sheet. */
    Sheet sheet;

    /**
     * Gets the sheet.
     *
     * @return the sheet
     */
    public Sheet getSheet() {
        return this.sheet;
    }

    /**
     * Sets the sheet.
     *
     * @param sheet the new sheet
     */
    public void setSheet(final Sheet sheet) {
        this.sheet = sheet;
    }

    /** The report title style. */
    XSSFCellStyle reportTitleStyle;

    /** The generated by style. */
    XSSFCellStyle generatedByStyle;

    /** The header caption style. */
    XSSFCellStyle headerCaptionStyle;

    /** The header value style. */
    XSSFCellStyle headerValueStyle;

    /** The additional header caption style. */
    XSSFCellStyle additionalHeaderCaptionStyle;

    /** The additional header value style. */
    XSSFCellStyle additionalHeaderValueStyle;

    /** The r report title style. */
    XSSFCellStyle rReportTitleStyle = null;

    /** The r generated by style. */
    XSSFCellStyle rGeneratedByStyle = null;

    /** The r header caption style. */
    XSSFCellStyle rHeaderCaptionStyle = null;

    /** The r header value style. */
    XSSFCellStyle rHeaderValueStyle = null;

    /** The r additional header caption style. */
    XSSFCellStyle rAdditionalHeaderCaptionStyle = null;

    /** The r additional header value style. */
    XSSFCellStyle rAdditionalHeaderValueStyle = null;

    /** The resultant sheet name. */
    private String resultantSheetName;

    /** The resultant report title row content. */
    private String resultantReportTitleRowContent;

    /** The resultant logger info row content. */
    private String resultantLoggerInfoRowContent;

    /** The resultant column for title region. */
    private Integer[] resultantColumnForTitleRegion;

    /** The resultant column for generated by region. */
    private Integer[] resultantColumnForGeneratedByRegion;

    /** The resultant header caption start col. */
    private int resultantHeaderCaptionStartCol;

    /** The resultant header value start col. */
    private int resultantHeaderValueStartCol;

    /**
     * Gets the default sheet row num.
     *
     * @return the default sheet row num
     */
    public Integer getDefaultSheetRowNum() {
        return this.defaultSheetRowNum;
    }

    /**
     * Sets the default sheet row num.
     *
     * @param defaultSheetRowNum the new default sheet row num
     */
    public void setDefaultSheetRowNum(final Integer defaultSheetRowNum) {
        this.defaultSheetRowNum = defaultSheetRowNum;
    }

    /**
     * Sets the checks if is header section added.
     *
     * @param isHeaderSectionAdded the new checks if is header section added
     */
    public void setIsHeaderSectionAdded(final Boolean isHeaderSectionAdded) {
        this.isHeaderSectionAdded = isHeaderSectionAdded;
    }

    /**
     * Gets the r report title style.
     *
     * @return the r report title style
     */
    public XSSFCellStyle getrReportTitleStyle() {
        return this.rReportTitleStyle;
    }

    /**
     * Sets the r report title style.
     *
     * @param rReportTitleStyle the new r report title style
     */
    public void setrReportTitleStyle(final XSSFCellStyle rReportTitleStyle) {
        this.rReportTitleStyle = rReportTitleStyle;
    }

    /**
     * Gets the r generated by style.
     *
     * @return the r generated by style
     */
    public XSSFCellStyle getrGeneratedByStyle() {
        return this.rGeneratedByStyle;
    }

    /**
     * Sets the r generated by style.
     *
     * @param rGeneratedByStyle the new r generated by style
     */
    public void setrGeneratedByStyle(final XSSFCellStyle rGeneratedByStyle) {
        this.rGeneratedByStyle = rGeneratedByStyle;
    }

    /**
     * Gets the r header caption style.
     *
     * @return the r header caption style
     */
    public XSSFCellStyle getrHeaderCaptionStyle() {
        return this.rHeaderCaptionStyle;
    }

    /**
     * Sets the r header caption style.
     *
     * @param rHeaderCaptionStyle the new r header caption style
     */
    public void setrHeaderCaptionStyle(final XSSFCellStyle rHeaderCaptionStyle) {
        this.rHeaderCaptionStyle = rHeaderCaptionStyle;
    }

    /**
     * Gets the r header value style.
     *
     * @return the r header value style
     */
    public XSSFCellStyle getrHeaderValueStyle() {
        return this.rHeaderValueStyle;
    }

    /**
     * Sets the r header value style.
     *
     * @param rHeaderValueStyle the new r header value style
     */
    public void setrHeaderValueStyle(final XSSFCellStyle rHeaderValueStyle) {
        this.rHeaderValueStyle = rHeaderValueStyle;
    }

    /**
     * Gets the r additional header caption style.
     *
     * @return the r additional header caption style
     */
    public XSSFCellStyle getrAdditionalHeaderCaptionStyle() {
        return this.rAdditionalHeaderCaptionStyle;
    }

    /**
     * Sets the r additional header caption style.
     *
     * @param rAdditionalHeaderCaptionStyle the new r additional header caption style
     */
    public void setrAdditionalHeaderCaptionStyle(final XSSFCellStyle rAdditionalHeaderCaptionStyle) {
        this.rAdditionalHeaderCaptionStyle = rAdditionalHeaderCaptionStyle;
    }

    /**
     * Gets the r additional header value style.
     *
     * @return the r additional header value style
     */
    public XSSFCellStyle getrAdditionalHeaderValueStyle() {
        return this.rAdditionalHeaderValueStyle;
    }

    /**
     * Sets the r additional header value style.
     *
     * @param rAdditionalHeaderValueStyle the new r additional header value style
     */
    public void setrAdditionalHeaderValueStyle(final XSSFCellStyle rAdditionalHeaderValueStyle) {
        this.rAdditionalHeaderValueStyle = rAdditionalHeaderValueStyle;
    }

    /**
     * Gets the resultant report title row content.
     *
     * @return the resultant report title row content
     */
    public String getResultantReportTitleRowContent() {
        return this.resultantReportTitleRowContent;
    }

    /**
     * Sets the resultant report title row content.
     *
     * @param resultantReportTitleRowContent the new resultant report title row content
     */
    protected void setResultantReportTitleRowContent(final String resultantReportTitleRowContent) {
        this.resultantReportTitleRowContent = resultantReportTitleRowContent;
    }

    /**
     * Gets the resultant logger info row content.
     *
     * @return the resultant logger info row content
     */
    public String getResultantLoggerInfoRowContent() {
        return this.resultantLoggerInfoRowContent;
    }

    /**
     * Sets the resultant logger info row content.
     *
     * @param resultantLoggerInfoRowContent the new resultant logger info row content
     */
    protected void setResultantLoggerInfoRowContent(final String resultantLoggerInfoRowContent) {
        this.resultantLoggerInfoRowContent = resultantLoggerInfoRowContent;
    }

    /**
     * Gets the resultant column for title region.
     *
     * @return the resultant column for title region
     */
    public Integer[] getResultantColumnForTitleRegion() {
        return this.resultantColumnForTitleRegion;
    }

    /**
     * Sets the resultant column for title region.
     *
     * @param resultantColumnForTitleRegion the new resultant column for title region
     */
    protected void setResultantColumnForTitleRegion(final Integer[] resultantColumnForTitleRegion) {
        this.resultantColumnForTitleRegion = resultantColumnForTitleRegion;
    }

    /**
     * Gets the resultant column for generated by region.
     *
     * @return the resultant column for generated by region
     */
    public Integer[] getResultantColumnForGeneratedByRegion() {
        return this.resultantColumnForGeneratedByRegion;
    }

    /**
     * Sets the resultant column for generated by region.
     *
     * @param resultantColumnForGeneratedByRegion the new resultant column for generated by region
     */
    protected void setResultantColumnForGeneratedByRegion(final Integer[] resultantColumnForGeneratedByRegion) {
        this.resultantColumnForGeneratedByRegion = resultantColumnForGeneratedByRegion;
    }

    /**
     * Gets the resultant header caption start col.
     *
     * @return the resultant header caption start col
     */
    public int getResultantHeaderCaptionStartCol() {
        return this.resultantHeaderCaptionStartCol;
    }

    /**
     * Sets the resultant header caption start col.
     *
     * @param resultantHeaderCaptionStartCol the new resultant header caption start col
     */
    protected void setResultantHeaderCaptionStartCol(final int resultantHeaderCaptionStartCol) {
        this.resultantHeaderCaptionStartCol = resultantHeaderCaptionStartCol;
    }

    /**
     * Gets the resultant header value start col.
     *
     * @return the resultant header value start col
     */
    public int getResultantHeaderValueStartCol() {
        return this.resultantHeaderValueStartCol;
    }

    /**
     * Sets the resultant header value start col.
     *
     * @param resultantHeaderValueStartCol the new resultant header value start col
     */
    protected void setResultantHeaderValueStartCol(final int resultantHeaderValueStartCol) {
        this.resultantHeaderValueStartCol = resultantHeaderValueStartCol;
    }

    /**
     * Gets the resultant sheet name.
     *
     * @return the resultant sheet name
     */
    public String getResultantSheetName() {
        return this.resultantSheetName;
    }

    /**
     * Sets the resultant sheet name.
     *
     * @param resultantSheetName the new resultant sheet name
     */
    protected void setResultantSheetName(final String resultantSheetName) {
        this.resultantSheetName = resultantSheetName;
    }

    /**
     * Gets the component configs.
     *
     * @return the component configs
     */
    public List<ExportExcelComponentConfiguration> getComponentConfigs() {
        return this.componentConfigs;
    }

    /**
     * Sets the component configs.
     *
     * @param componentConfigs the new component configs
     */
    public void setComponentConfigs(final List<ExportExcelComponentConfiguration> componentConfigs) {
        this.componentConfigs = componentConfigs;
    }

    /**
     * Gets the checks if is header section added.
     *
     * @return the checks if is header section added
     */
    public Boolean getIsHeaderSectionAdded() {
        return this.isHeaderSectionAdded;
    }

    /**
     * Gets the default report title.
     *
     * @return the default report title
     */
    public String getDEFAULT_REPORT_TITLE() {
        return this.DEFAULT_REPORT_TITLE;
    }

    /**
     * Gets the date format.
     *
     * @return the date format
     */
    public String getDateFormat() {
        return this.dateFormat;
    }

    /**
     * Sets the date format.
     *
     * @param dateFormat the new date format
     */
    public void setDateFormat(final String dateFormat) {
        this.dateFormat = dateFormat;
    }

    /**
     * Gets the checks if is total row required.
     *
     * @return the checks if is total row required
     */
    public Boolean getIsTotalRowRequired() {
        return this.isTotalRowRequired;
    }

    /**
     * Gets the checks if is default sheet title required.
     *
     * @return the checks if is default sheet title required
     */
    public Boolean getIsDefaultSheetTitleRequired() {
        return this.isDefaultSheetTitleRequired;
    }

    /**
     * Gets the checks if is default generated by required.
     *
     * @return the checks if is default generated by required
     */
    public Boolean getIsDefaultGeneratedByRequired() {
        return this.isDefaultGeneratedByRequired;
    }

    /**
     * Gets the report title row content.
     *
     * @return the report title row content
     */
    public String getReportTitleRowContent() {
        return this.reportTitleRowContent;
    }

    /**
     * Gets the header caption start col.
     *
     * @return the header caption start col
     */
    public Integer getHeaderCaptionStartCol() {
        return this.headerCaptionStartCol;
    }

    /**
     * Gets the header value start col.
     *
     * @return the header value start col
     */
    public Integer getHeaderValueStartCol() {
        return this.headerValueStartCol;
    }

    /**
     * Gets the no of columns in header.
     *
     * @return the no of columns in header
     */
    public Integer getNoOfColumnsInHeader() {
        return this.noOfColumnsInHeader;
    }

    /**
     * Gets the no of columns to merge in add header value.
     *
     * @return the no of columns to merge in add header value
     */
    public Integer getNoOfColumnsToMergeInAddHeaderValue() {
        return this.noOfColumnsToMergeInAddHeaderValue;
    }

    /**
     * Gets the no of columns in add header.
     *
     * @return the no of columns in add header
     */
    public Integer getNoOfColumnsInAddHeader() {
        return this.noOfColumnsInAddHeader;
    }

    /**
     * Gets the checks if is header section required.
     *
     * @return the checks if is header section required
     */
    public Boolean getIsHeaderSectionRequired() {
        return this.isHeaderSectionRequired;
    }

    /**
     * Gets the logger info row content.
     *
     * @return the logger info row content
     */
    public String getLoggerInfoRowContent() {
        return this.loggerInfoRowContent;
    }

    /**
     * Gets the report title.
     *
     * @return the report title
     */
    public String getReportTitle() {
        return this.reportTitle;
    }

    /**
     * Gets the column for title region.
     *
     * @return the column for title region
     */
    public Integer[] getColumnForTitleRegion() {
        return this.columnForTitleRegion;
    }

    /**
     * Gets the column for generated by region.
     *
     * @return the column for generated by region
     */
    public Integer[] getColumnForGeneratedByRegion() {
        return this.columnForGeneratedByRegion;
    }

    /**
     * Gets the additional header info.
     *
     * @return the additional header info
     */
    public Map<String, String> getAdditionalHeaderInfo() {
        return this.additionalHeaderInfo;
    }

    /**
     * Gets the sheet name.
     *
     * @return the sheet name
     */
    public String getSheetName() {
        return this.sheetName;
    }

    /**
     * Gets the report title style.
     *
     * @return the report title style
     */
    public XSSFCellStyle getReportTitleStyle() {
        return this.reportTitleStyle;
    }

    /**
     * Gets the generated by style.
     *
     * @return the generated by style
     */
    public XSSFCellStyle getGeneratedByStyle() {
        return this.generatedByStyle;
    }

    /**
     * Gets the header caption style.
     *
     * @return the header caption style
     */
    public XSSFCellStyle getHeaderCaptionStyle() {
        return this.headerCaptionStyle;
    }

    /**
     * Gets the header value style.
     *
     * @return the header value style
     */
    public XSSFCellStyle getHeaderValueStyle() {
        return this.headerValueStyle;
    }

    /**
     * Gets the additional header caption style.
     *
     * @return the additional header caption style
     */
    public XSSFCellStyle getAdditionalHeaderCaptionStyle() {
        return this.additionalHeaderCaptionStyle;
    }

    /**
     * Gets the additional header value style.
     *
     * @return the additional header value style
     */
    public XSSFCellStyle getAdditionalHeaderValueStyle() {
        return this.additionalHeaderValueStyle;
    }

    /**
     * Sets the checks if is total row required.
     *
     * @param isTotalRowRequired the new checks if is total row required
     */
    public void setIsTotalRowRequired(final Boolean isTotalRowRequired) {
        this.isTotalRowRequired = isTotalRowRequired;
    }

    /**
     * Sets the checks if is default sheet title required.
     *
     * @param isDefaultSheetTitleRequired the new checks if is default sheet title required
     */
    public void setIsDefaultSheetTitleRequired(final Boolean isDefaultSheetTitleRequired) {
        this.isDefaultSheetTitleRequired = isDefaultSheetTitleRequired;
    }

    /**
     * Sets the checks if is default generated by required.
     *
     * @param isDefaultGeneratedByRequired the new checks if is default generated by required
     */
    public void setIsDefaultGeneratedByRequired(final Boolean isDefaultGeneratedByRequired) {
        this.isDefaultGeneratedByRequired = isDefaultGeneratedByRequired;
    }

    /**
     * Sets the report title row content.
     *
     * @param reportTitleRowContent the new report title row content
     */
    public void setReportTitleRowContent(final String reportTitleRowContent) {
        this.reportTitleRowContent = reportTitleRowContent;
    }

    /**
     * Sets the header caption start col.
     *
     * @param headerCaptionStartCol the new header caption start col
     */
    public void setHeaderCaptionStartCol(final Integer headerCaptionStartCol) {
        this.headerCaptionStartCol = headerCaptionStartCol;
    }

    /**
     * Sets the header value start col.
     *
     * @param headerValueStartCol the new header value start col
     */
    public void setHeaderValueStartCol(final Integer headerValueStartCol) {
        this.headerValueStartCol = headerValueStartCol;
    }

    /**
     * Sets the no of columns in header.
     *
     * @param noOfColumnsInHeader the new no of columns in header
     */
    public void setNoOfColumnsInHeader(final Integer noOfColumnsInHeader) {
        this.noOfColumnsInHeader = noOfColumnsInHeader;
    }

    /**
     * Sets the no of columns to merge in add header value.
     *
     * @param noOfColumnsToMergeInAddHeaderValue the new no of columns to merge in add header value
     */
    public void setNoOfColumnsToMergeInAddHeaderValue(final Integer noOfColumnsToMergeInAddHeaderValue) {
        this.noOfColumnsToMergeInAddHeaderValue = noOfColumnsToMergeInAddHeaderValue;
    }

    /**
     * Sets the no of columns in add header.
     *
     * @param noOfColumnsInAddHeader the new no of columns in add header
     */
    public void setNoOfColumnsInAddHeader(final Integer noOfColumnsInAddHeader) {
        this.noOfColumnsInAddHeader = noOfColumnsInAddHeader;
    }

    /**
     * Sets the checks if is header section required.
     *
     * @param isHeaderSectionRequired the new checks if is header section required
     */
    public void setIsHeaderSectionRequired(final Boolean isHeaderSectionRequired) {
        this.isHeaderSectionRequired = isHeaderSectionRequired;
    }

    /**
     * Sets the logger info row content.
     *
     * @param loggerInfoRowContent the new logger info row content
     */
    public void setLoggerInfoRowContent(final String loggerInfoRowContent) {
        this.loggerInfoRowContent = loggerInfoRowContent;
    }

    /**
     * Sets the report title.
     *
     * @param reportTitle the new report title
     */
    public void setReportTitle(final String reportTitle) {
        this.reportTitle = reportTitle;
    }

    /**
     * Sets the column for title region.
     *
     * @param columnForTitleRegion the new column for title region
     */
    public void setColumnForTitleRegion(final Integer[] columnForTitleRegion) {
        this.columnForTitleRegion = columnForTitleRegion;
    }

    /**
     * Sets the column for generated by region.
     *
     * @param columnForGeneratedByRegion the new column for generated by region
     */
    public void setColumnForGeneratedByRegion(final Integer[] columnForGeneratedByRegion) {
        this.columnForGeneratedByRegion = columnForGeneratedByRegion;
    }

    /**
     * Sets the additional header info.
     *
     * @param additionalHeaderInfo the additional header info
     */
    public void setAdditionalHeaderInfo(final HashMap<String, String> additionalHeaderInfo) {
        this.additionalHeaderInfo = additionalHeaderInfo;
    }

    /**
     * Sets the sheet name.
     *
     * @param sheetName the new sheet name
     */
    public void setSheetName(final String sheetName) {
        this.sheetName = sheetName;
    }

    /**
     * Sets the report title style.
     *
     * @param reportTitleStyle the new report title style
     */
    public void setReportTitleStyle(final XSSFCellStyle reportTitleStyle) {
        this.reportTitleStyle = reportTitleStyle;
    }

    /**
     * Sets the generated by style.
     *
     * @param generatedByStyle the new generated by style
     */
    public void setGeneratedByStyle(final XSSFCellStyle generatedByStyle) {
        this.generatedByStyle = generatedByStyle;
    }

    /**
     * Sets the header caption style.
     *
     * @param headerCaptionStyle the new header caption style
     */
    public void setHeaderCaptionStyle(final XSSFCellStyle headerCaptionStyle) {
        this.headerCaptionStyle = headerCaptionStyle;
    }

    /**
     * Sets the header value style.
     *
     * @param headerValueStyle the new header value style
     */
    public void setHeaderValueStyle(final XSSFCellStyle headerValueStyle) {
        this.headerValueStyle = headerValueStyle;
    }

    /**
     * Sets the additional header caption style.
     *
     * @param additionalHeaderCaptionStyle the new additional header caption style
     */
    public void setAdditionalHeaderCaptionStyle(final XSSFCellStyle additionalHeaderCaptionStyle) {
        this.additionalHeaderCaptionStyle = additionalHeaderCaptionStyle;
    }

    /**
     * Sets the additional header value style.
     *
     * @param additionalHeaderValueStyle the new additional header value style
     */
    public void setAdditionalHeaderValueStyle(final XSSFCellStyle additionalHeaderValueStyle) {
        this.additionalHeaderValueStyle = additionalHeaderValueStyle;
    }
}
